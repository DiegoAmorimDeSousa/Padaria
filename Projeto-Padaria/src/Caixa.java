
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Diego
 */
public class Caixa extends javax.swing.JFrame {

DefaultTableModel modelo;
    public Caixa(String user, String nivel) {
        initComponents();
         modelo = (DefaultTableModel) TabelaCaixa.getModel();
        carregarTabela();
        
        
        TextoNome.setText(user);
        TextoNivel.setText(nivel);
        
        
        calculaPontos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jProgressBar1 = new javax.swing.JProgressBar();
        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaCaixa = new javax.swing.JTable();
        botaoFechaCaixa = new javax.swing.JButton();
        TextoNome = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TextoNivel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();

        jScrollPane2.setViewportView(jTree1);

        jScrollPane3.setViewportView(jEditorPane1);

        jButton2.setText("jButton2");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("jMenu3");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fechamento de Caixa");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Caixa Geral", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        TabelaCaixa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "Valor", "Funcionário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TabelaCaixa);
        if (TabelaCaixa.getColumnModel().getColumnCount() > 0) {
            TabelaCaixa.getColumnModel().getColumn(0).setResizable(false);
            TabelaCaixa.getColumnModel().getColumn(1).setResizable(false);
            TabelaCaixa.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botaoFechaCaixa.setBackground(new java.awt.Color(0, 102, 51));
        botaoFechaCaixa.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        botaoFechaCaixa.setText("Fechar Caixa");
        botaoFechaCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoFechaCaixaActionPerformed(evt);
            }
        });

        TextoNome.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextoNome.setText("Nome do operador");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("-");

        TextoNivel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextoNivel.setText("Nivel");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Usuário do funcionário:");

        user.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jButton3.setBackground(new java.awt.Color(0, 102, 51));
        jButton3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton3.setText("Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jMenu4.setText("Menu");
        jMenu4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jMenuItem1.setText("Início");
        jMenuItem1.setToolTipText("");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        jMenuBar2.add(jMenu4);
        jMenuBar2.add(jMenu5);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(botaoFechaCaixa, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TextoNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TextoNivel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextoNome)
                    .addComponent(jLabel2)
                    .addComponent(TextoNivel))
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoFechaCaixa)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void carregarTabela() {
        try {
            try {
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NovosProdutos.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto_padaria", "root", "060100");
            PreparedStatement stmt = null;
            stmt = con.prepareStatement("select data, valores, usuario from caixa");

          ResultSet rs = null;
          rs = stmt.executeQuery();
          Object[] obj = new Object[3];
          modelo.setRowCount(0);
          while (rs.next() ) {
              obj[0] = rs.getString("data");
              obj[1] = rs.getInt("valores");
              obj[2] = rs.getString("usuario");
              modelo.addRow(obj);
          }

            rs.close();
            stmt.close();
            con.close();

        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Produto não Cadastrada");
            throw new RuntimeException("Erro na conexão com o banco", erro);
        }
    }
    
    private void botaoFechaCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoFechaCaixaActionPerformed
       
                try {
            try {
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NovosProdutos.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto_padaria", "root", "060100");
            PreparedStatement stmt = null;
            stmt = con.prepareStatement("INSERT INTO caixa (valores, usuario) (select valor, ? from caixa_diario)");
{                stmt.setString(1, TextoNome.getText());
                 stmt.executeUpdate();
                 
                 

                stmt.close();
                
                stmt = con.prepareStatement("UPDATE pontosfuncionarios SET pontuacao = (select valor from caixa_diario)");
{                

                 stmt.executeUpdate();

                stmt.close();
                
                stmt = con.prepareStatement("INSERT INTO funcionariosCaixa (usuario, caixa) (select usuario, pontuacao from pontosfuncionarios)");
                stmt.executeUpdate();
                stmt.close();
                stmt = con.prepareStatement("select data, valores, usuario from caixa");

          ResultSet rs = null;
          rs = stmt.executeQuery();
          Object[] obj = new Object[3];
          modelo.setRowCount(0);
          while (rs.next() ) {
              obj[0] = rs.getString("data");
              obj[1] = rs.getInt("valores");
              obj[2] = rs.getString("usuario");
              modelo.addRow(obj);
          }

            rs.close();
            stmt.close();
                con.close();
            }
}
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Produto não Cadastrado, Tente outra vez!");
            throw new RuntimeException("Erro na conexão com o banco", erro);
        }
               
    }//GEN-LAST:event_botaoFechaCaixaActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      
        try{
                
           try{
               Class.forName("com.mysql.jdbc.Driver");
           } catch (ClassNotFoundException ex) {
               Logger.getLogger(NovosProdutos.class.getName()).log(Level.SEVERE, null, ex);     
           }
           
          Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto_padaria", "root", "060100");
          PreparedStatement stmt = null;
          stmt = con.prepareStatement("SELECT nome, user, nivel, email, cpf, salario FROM novosfuncionarios where user = ?");
           if (user.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Preencha algo no campo do usuário do funcionário");
            } else {
          stmt.setString(1, user.getText());     
           
          ResultSet rs = null;
          rs = stmt.executeQuery();
         
          
          while (rs.next() ) {
              JOptionPane.showMessageDialog(null,
                      "Nome: " + rs.getString("nome") + "\n" 
                    + "User: " + rs.getString("user") + "\n" 
                    + "Nivel: " + rs.getString("nivel") + "\n" 
              + "Email: " + rs.getString("email") + "\n" 
              + "CPF: " + rs.getString("cpf") + "\n" 
                      + "Salário: " + rs.getString("salario"));

          }
          
          rs.close();
          stmt.close();
          con.close();
           }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "ERROO!!");
            throw new RuntimeException("Erro na conexão com o banco", erro);
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        dispose();
        new Home(TextoNome.getText() , TextoNivel.getText()).setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed
 
    
    
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelaCaixa;
    private javax.swing.JLabel TextoNivel;
    private javax.swing.JLabel TextoNome;
    private javax.swing.JButton botaoFechaCaixa;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTree jTree1;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables

    private void calculaPontos() {
        
          try {
            try {
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NovosProdutos.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto_padaria", "root", "060100");
            PreparedStatement stmt = null;
            stmt = con.prepareStatement("UPDATE pontosfuncionarios SET usuario = ?, pontuacao = (select valor from caixa_diario)");
{                stmt.setString(1, TextoNome.getText());

                 stmt.executeUpdate();

                stmt.close();
                con.close();
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Produto não Cadastrado, Tente outra vez!");
            throw new RuntimeException("Erro na conexão com o banco", erro);
        }
        
    }

  
}
    

