
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author diego.amorim
 */
public class Pontos extends javax.swing.JFrame {

    /**
     * Creates new form Pontos
     */
    public Pontos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        user = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nivel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaFunc = new javax.swing.JTable();
        botaoExcluir = new javax.swing.JButton();
        userconsulta = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jLabel5.setText("jLabel5");

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        user.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        user.setText("usuario");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("-");

        nivel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        nivel.setText("nivel");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Funcionários", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        TabelaFunc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Usuário", "Nível", "Email", "CPF", "Salário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TabelaFunc);
        if (TabelaFunc.getColumnModel().getColumnCount() > 0) {
            TabelaFunc.getColumnModel().getColumn(0).setResizable(false);
            TabelaFunc.getColumnModel().getColumn(1).setResizable(false);
            TabelaFunc.getColumnModel().getColumn(2).setResizable(false);
            TabelaFunc.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addContainerGap())
        );

        botaoExcluir.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        botaoExcluir.setText("Excluir");
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });

        userconsulta.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Insira o usuário do funcionário");

        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton2.setText("Editar");

        jButton3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton3.setText("Cadastrar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoExcluir)
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(user)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nivel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(userconsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user)
                    .addComponent(jLabel2)
                    .addComponent(nivel))
                .addGap(15, 15, 15)
                .addComponent(jLabel4)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userconsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoExcluir)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (userconsulta.getText().trim().equals("")) {
            try {
                DefaultTableModel model2 = (DefaultTableModel) TabelaFunc.getModel();
                try {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(NovosProdutos.class.getName()).log(Level.SEVERE, null, ex);
                }
                TabelaFunc.setModel(model2);
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto_padaria", "root", "060100");
                PreparedStatement stmt = null;
                stmt = con.prepareStatement("SELECT nome, user, nivel, email, cpf, salario FROM novosfuncionarios");
                {

                    ResultSet rs = null;
                    rs = stmt.executeQuery();
                    Object[] obj = new Object[6];
                    model2.setRowCount(0);
                    while (rs.next()) {
                        obj[0] = rs.getString("nome");
                        obj[1] = rs.getString("user");
                        obj[2] = rs.getString("nivel");
                        obj[3] = rs.getString("email");
                        obj[4] = rs.getInt("cpf");
                        obj[5] = rs.getDouble("salario");
                        model2.addRow(obj);
                    }

                    rs.close();
                    stmt.close();
                    con.close();
                }
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "ERROO!!");
                throw new RuntimeException("Erro na conexão com o banco", erro);
            }
        }

        try {
            DefaultTableModel model2 = (DefaultTableModel) TabelaFunc.getModel();
            try {
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NovosProdutos.class.getName()).log(Level.SEVERE, null, ex);
            }
            TabelaFunc.setModel(model2);
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto_padaria", "root", "060100");
            PreparedStatement stmt = null;
            stmt = con.prepareStatement("SELECT nome, user, nivel, email, cpf, salario FROM novosfuncionarios where user = ?");
            {
                stmt.setString(1, userconsulta.getText());

                ResultSet rs = null;
                rs = stmt.executeQuery();
                Object[] obj = new Object[6];
                model2.setRowCount(0);
                while (rs.next()) {
                    obj[0] = rs.getString("nome");
                    obj[1] = rs.getString("user");
                    obj[2] = rs.getString("nivel");
                    obj[3] = rs.getString("email");
                    obj[4] = rs.getInt("cpf");
                    obj[5] = rs.getDouble("salario");
                    model2.addRow(obj);
                }

                rs.close();
                stmt.close();
                con.close();
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "ERROO!!");
            throw new RuntimeException("Erro na conexão com o banco", erro);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
       
         try {
                DefaultTableModel model2 = (DefaultTableModel) TabelaFunc.getModel();
                try {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(NovosProdutos.class.getName()).log(Level.SEVERE, null, ex);
                }
                TabelaFunc.setModel(model2);
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto_padaria", "root", "060100");
                PreparedStatement stmt = null;
                stmt = con.prepareStatement("SELECT nome, user, nivel, email, cpf, salario FROM novosfuncionarios");
                {

                    ResultSet rs = null;
                    rs = stmt.executeQuery();
                    Object[] obj = new Object[6];
                    model2.setRowCount(0);
                    while (rs.next()) {
                        obj[0] = rs.getString("nome");
                        obj[1] = rs.getString("user");
                        obj[2] = rs.getString("nivel");
                        obj[3] = rs.getString("email");
                        obj[4] = rs.getInt("cpf");
                        obj[5] = rs.getDouble("salario");
                        model2.addRow(obj);
                    }

                    rs.close();
                    stmt.close();
                    con.close();
                }
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "ERROO!!");
                throw new RuntimeException("Erro na conexão com o banco", erro);
            }
        
    }//GEN-LAST:event_formWindowActivated

    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirActionPerformed
       try{
           try{
               Class.forName("com.mysql.jdbc.Driver");
           } catch (ClassNotFoundException ex) {
               Logger.getLogger(NovosProdutos.class.getName()).log(Level.SEVERE, null, ex);     
           }
          Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto_padaria", "root", "060100");
          PreparedStatement stmt = null;
          stmt = con.prepareStatement("DELETE FROM novosfuncionarios WHERE nome = ?");
          stmt.setString(1, TabelaFunc.getModel().getValueAt(TabelaFunc.getSelectedRow(), 0).toString());
          stmt.executeUpdate();
          
          stmt.close();
          con.close();
          
          
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "ERRO!!");
            throw new RuntimeException("Erro na conexão com o banco", erro);
        }
        
         
         //ATUALIZA
         DefaultTableModel model2 = (DefaultTableModel) TabelaFunc.getModel();
         
         try {
            try {
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NovosProdutos.class.getName()).log(Level.SEVERE, null, ex);
            }
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projeto_padaria", "root", "060100");
            PreparedStatement stmt = null;
           stmt = con.prepareStatement("SELECT nome, user, nivel, email, cpf, salario FROM novosfuncionarios");
                {

                    ResultSet rs = null;
                    rs = stmt.executeQuery();
                    Object[] obj = new Object[6];
                    model2.setRowCount(0);
                    while (rs.next()) {
                        obj[0] = rs.getString("nome");
                        obj[1] = rs.getString("user");
                        obj[2] = rs.getString("nivel");
                        obj[3] = rs.getString("email");
                        obj[4] = rs.getInt("cpf");
                        obj[5] = rs.getDouble("salario");
                        model2.addRow(obj);
                    }

                    rs.close();
                    stmt.close();
                    con.close();
                }
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "ERROO!!");
                throw new RuntimeException("Erro na conexão com o banco", erro);
            }
    }//GEN-LAST:event_botaoExcluirActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     dispose();
     new CadastroFuncionario(user.getText() , nivel.getText()).setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pontos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pontos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pontos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pontos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pontos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelaFunc;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nivel;
    private javax.swing.JLabel user;
    private javax.swing.JTextField userconsulta;
    // End of variables declaration//GEN-END:variables
}
